import Head from "next/head";
import { Inter } from "@next/font/google";
import NavBar from "../components/navBar";
import { Form } from "@web3uikit/core";

import { useMemo, useState, useEffect } from "react";
import {
  ConnectionProvider,
  WalletProvider,
} from "@solana/wallet-adapter-react";
import { WalletAdapterNetwork } from "@solana/wallet-adapter-base";
import {
  GlowWalletAdapter,
  PhantomWalletAdapter,
  SlopeWalletAdapter,
  SolflareWalletAdapter,
  TorusWalletAdapter,
} from "@solana/wallet-adapter-wallets";
import {
  WalletModalProvider,
  WalletMultiButton,
} from "@solana/wallet-adapter-react-ui";
import { clusterApiUrl } from "@solana/web3.js";
import { MetaplexProvider } from "./MetaplexProvider";
import "@solana/wallet-adapter-react-ui/styles.css";

import { app, database } from "./firebaseConfig";
import { collection, addDoc, getDocs } from "firebase/firestore";

export default function Home() {
  const [network, setNetwork] = useState(WalletAdapterNetwork.Devnet);

  const endpoint = useMemo(() => clusterApiUrl(network), [network]);

  const wallets = useMemo(
    () => [
      new PhantomWalletAdapter(),
      new GlowWalletAdapter(),
      new SlopeWalletAdapter(),
      new SolflareWalletAdapter({ network }),
      new TorusWalletAdapter(),
    ],
    [network]
  );

  const handleChange = (event: { target: { value: any } }) => {
    switch (event.target.value) {
      case "devnet":
        setNetwork(WalletAdapterNetwork.Devnet);
        break;
      case "mainnet":
        setNetwork(WalletAdapterNetwork.Mainnet);
        break;
      case "testnet":
        setNetwork(WalletAdapterNetwork.Testnet);
        break;
      default:
        setNetwork(WalletAdapterNetwork.Devnet);
        break;
    }
  };

  async function formHandler (event: any) {
    // Get data from the form.
    console.log(event)
    const data = {
        Membership: event.data[0].inputResult,
        RedemptionPoints: event.data[1].inputResult,
        ExpiryData: event.data[2].inputResult,
    }
    console.log(data)

    // Send the data to the server in JSON format.
    // const JSONdata = JSON.stringify(data)

    // // API endpoint where we send form data.
    // const endpoint = '/api/form'

    // // Form the request for sending data to the server.
    // const options = {
    //     // The method is POST because we are sending data.
    //     method: 'POST',
    //     // Tell the server we're sending JSON.
    //     headers: {
    //     'Content-Type': 'application/json',
    //     },
    //     // Body of the request is the JSON data we created above.
    //     body: JSONdata,
    // }
  }

  return (
    <>
      <Head>
        <title>Treehoppers Merchant Dashboard</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <ConnectionProvider endpoint={endpoint}>
        <WalletProvider wallets={wallets} autoConnect>
          <WalletModalProvider>
            <MetaplexProvider>
              <main>
                <NavBar onClusterChange={handleChange} />

                <div className="flex justify-center h-screen">
                  <Form
                    buttonConfig={{
                      theme: "primary",
                    }}
                    data={[
                      {
                        inputWidth: "100%",
                        name: "Membership Level",
                        type: "text",
                        value: "",
                      },
                      {
                        name: "Redemption Points",
                        type: "number",
                        value: "",
                      },
                      {
                        name: "Date of Expiry",
                        type: "date",
                        value: "",
                      },
                      {
                        name: "Number of Coupons",
                        type: "number",
                        value: "",
                      },
                      {
                        inputWidth: '100%',
                        name: 'Image',
                        type: 'file',
                        value: ''
                      },                  

                    ]}
                    onSubmit={formHandler}
                    title="Add Coupons"
                  />
                </div>
              </main>
            </MetaplexProvider>
          </WalletModalProvider>
        </WalletProvider>
      </ConnectionProvider>
    </>
  );
}
